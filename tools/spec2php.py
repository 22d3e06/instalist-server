#!/usr/bin/env python3

import sys
import yaml

def main(argv):
    if len(argv) != 1:
        print('Usage: ' + sys.argv[0] + ' <spec-file>')
        exit(1)
    contents = ""
    with open(argv[0], 'r') as source:
        contents = source.read()
    
    spec = yaml.load(contents)
    rpc_spec = spec['rpc']
    for current_rpc_method in rpc_spec:
        print('/**')
        print(' * ' + current_rpc_method + ' (autogenerated method definition)')
        print(' * expected wamp-parameters: ', end="")
        if len(rpc_spec[current_rpc_method]['parameters']) == 0:
            print("none")
        else:
            print(', '.join(rpc_spec[current_rpc_method]['parameters']))
        print(' * ')
        for description_line in rpc_spec[current_rpc_method]['description'].split("\n"):
            if len(description_line.strip(' \t\n\r')) == 0:
                continue
            print(' * ' + description_line)
        print(' * @param ConnectionInterface $connection')
        print(' * @param WampRequest $request')
        print(' * @param array $params')
        print(' * @return array')
        print(' */')
        print('public function ' + current_rpc_method + '(ConnectionInterface $connection, WampRequest $request, $params) {')
        print('    // method stub.')
        return_vars_text = []
        for return_var in rpc_spec[current_rpc_method]['returns']:
            if rpc_spec[current_rpc_method]['returns'][return_var] == 'int':
                return_vars_text.append('"' + return_var + '" => 0')
            elif rpc_spec[current_rpc_method]['returns'][return_var] == 'float':
                return_vars_text.append('"' + return_var + '" => 0.0')
            elif rpc_spec[current_rpc_method]['returns'][return_var] == 'string':
                return_vars_text.append('"' + return_var + '" => ""')
            elif rpc_spec[current_rpc_method]['returns'][return_var] == 'list':
                return_vars_text.append('"' + return_var + '" => array()')
            else:
                return_vars_text.append('"' + return_var + '" => null')
        print('    return array(' + ', '.join(return_vars_text) + ');')
        print('}')
        print('')
        
    

main(sys.argv[1:])

